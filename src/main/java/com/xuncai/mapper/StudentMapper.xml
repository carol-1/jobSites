<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xuncai.mapper.StudentMapper">

	<resultMap type="com.xuncai.entity.Student" id="Student">
		<id column="id" property="id"/>
		<result column="name"  property="name"/>
		<result column="account"  property="account"/>
		<result column="password"  property="password"/>
		<result column="birthday"  property="birthday"/>
		<result column="profession_id"  property="professionId"/>
		<result column="college"  property="college"/>
		<result column="education"  property="education"/>
		<result column="phone"  property="phone"/>
		<result column="sex"  property="sex"/>
		<result column="photo"  property="photo"/>
		<result column="graduate_date"  property="graduateDate"/>
	</resultMap>

	<insert id="create" keyProperty="id" useGeneratedKeys="true" parameterType="com.xuncai.entity.Student">
		insert into tb_student(
			name,
			account,
			password,
			birthday,
			profession_id,
			college,
			education,
			phone,
			sex,
			photo,
			graduate_date
		)values(
			#{name},
			#{account},
			#{password},
			#{birthday},
			#{professionId},
			#{college},
			#{education},
			#{phone},
			#{sex},
			#{photo},
			#{graduateDate}
		)
	</insert>

	<select id="query" resultMap="Student">
		select * from tb_student
		<include refid="StudentFindCriteria"/>
	</select>

	<select id="count" resultType="int">
		select count(1) from tb_student
		<include refid="StudentFindCriteria"/>
	</select>

	<select id="detail" resultMap="Student">
		select * from tb_student where id = #{id}
	</select>

	<delete id="delete">
		delete from tb_student where id = #{id}
	</delete>
	<update id="update">
		update tb_student set
			name=#{name},
			account=#{account},
			password=#{password},
			birthday=#{birthday},
			profession_id=#{professionId},
			college=#{college},
			education=#{education},
			phone=#{phone},
			sex=#{sex},
			photo=#{photo},
			graduate_date=#{graduateDate}
		where id = #{id}
	</update>

	<update id="updateSelective">
		update tb_student set
			<if test="name != null and name != ''"> name = #{name}</if>,
			<if test="account != null and account != ''"> account = #{account}</if>,
			<if test="password != null and password != ''"> password = #{password}</if>,
			<if test="birthday != null and birthday != ''"> birthday = #{birthday}</if>,
			<if test="professionId != null">profession_id = #{professionId}</if>,
			<if test="college != null and college != ''"> college = #{college}</if>,
			<if test="education != null and education != ''"> education = #{education}</if>,
			<if test="phone != null and phone != ''"> phone = #{phone}</if>,
			<if test="sex != null">sex = #{sex}</if>,
			<if test="photo != null and photo != ''"> photo = #{photo}</if>,
			<if test="graduateDate != null and graduateDate != ''"> graduate_date = #{graduateDate}</if>
		where id = #{id}
	</update>

	<sql id="StudentFindCriteria">
		<where>
			<if test="id != null">and id = #{id}</if>
			<if test="name != null and name != ''">and name like concat('%',#{name},'%')</if>
			<if test="account != null and account != ''">and account = #{account}</if>
			<if test="password != null and password != ''">and password = #{password}</if>
			<if test="professionId != null">and profession_id = #{professionId}</if>
			<if test="college != null and college != ''">and college like concat('%',#{college},'%')</if>
			<if test="education != null and education != ''">and education = #{education}</if>
			<if test="phone != null and phone != ''">and phone = #{phone}</if>
			<if test="sex != null">and sex = #{sex}</if>
			<if test="photo != null and photo != ''">and photo = #{photo}</if>
		</where>
	</sql>

</mapper>